-- Creating Tables in the Database
CREATE TABLE PopStats (
    CountryCode varchar(5),
    CountryName varchar(50),
    Population integer,
    AverageIncome double,
    CONSTRAINT popstats_pk PRIMARY KEY (CountryCode)
);

CREATE TABLE GlobalPage (
    CalendarDate date,
    CountryCode varchar(5),
    NewLikes integer,
    DailyPostReach integer,
    DailyPostShares integer,
    DailyPostActions integer,
    DailyPostImpressions integer,
    FOREIGN KEY (CountryCode) REFERENCES PopStats(CountryCode)
);

CREATE TABLE FansPerCountry (
	CalendarDate date,
	CountryCode varchar(5),
	NumberOfFans integer,
	FOREIGN KEY (CountryCode) REFERENCES PopStats(CountryCode)
);

CREATE TABLE FansPerCity (
	CalendarDate date,
	City varchar(50),
	CountryCode varchar(5),
	NumberOfFans integer,
	CONSTRAINT fk_popstats_fpci FOREIGN KEY (CountryCode) REFERENCES PopStats(CountryCode)
);

CREATE TABLE FansPerLanguage (
	CalendarDate date,
	language varchar(50),
	CountryCode varchar(5),
	NumberOfFans integer,
	CONSTRAINT fk_popstats_fpl FOREIGN KEY (CountryCode) REFERENCES PopStats(CountryCode)
);

CREATE TABLE FansPerGenderAge (
	CalendarDate date,
	Gender varchar(1),
	AgeGroup varchar(50),
	NumberOfFans integer
);

CREATE TABLE PostInsights (
	CreatedTime datetime,
	EngagedFans integer,
	EngagedUsers integer,
	Impressions integer,
	NegativeFeedback integer,
	NonViralImpressions integer,
	NonViralReach integer,
	PostActivity integer,
	PostActivityUnique integer,
	PostClicks integer,
	UniquePostClicks integer,
	PostReactionsAnger integer,
	PostReactionsHaha integer,
	PostReactionsLike integer,
	PostReactionsLove integer,
	PostReactionsSorry integer,
	PostReactionsWow integer,
	Reach integer
);
 
-- Page Statistics - Global
SELECT ROUND(AVG(DailyPostReach), 2) "Daily average reach"
FROM GlobalPage;

SELECT ROUND(AVG(NewLikes), 2) "Daily average NewLikes"
FROM GlobalPage;

-- Page Statistics - Top 10 Countries (#fans)
SELECT CountryName, NumberOfFans 
FROM fanspercountry f
JOIN popstats p
ON f.countrycode = p.countrycode
WHERE CalendarDate = (SELECT MAX(CalendarDate) FROM fanspercountry)
GROUP BY f.countrycode
ORDER BY NumberOfFans DESC
LIMIT 10;

-- Page Statistics - Top 10 countries (penetration ratio) 
SELECT CountryName, Population, NumberOfFans, CONCAT(ROUND((SUM(NumberOfFans) / SUM(Population) * 100), 2), "%") "Penetration ratio"
FROM fanspercountry f
JOIN popstats p
ON f.countrycode = p.countrycode
WHERE CalendarDate = (SELECT MAX(CalendarDate) FROM fanspercountry)
GROUP BY f.countrycode
ORDER BY SUM(NumberOfFans) / SUM(Population) * 100 DESC
LIMIT 10;

-- Page Statistics - Bottom 10 cities (# fans)
SELECT CountryName, Population "Country population", City, NumberOfFans
FROM fanspercity f
JOIN popstats p
ON f.countrycode = p.countrycode
WHERE Population > 20000000
AND CalendarDate = (SELECT MAX(CalendarDate) FROM fanspercity)
GROUP BY City
ORDER BY NumberOfFans
LIMIT 10;

-- Page Statistics - Analysis by age group (split of fans) 
SELECT AgeGroup, CONCAT(ROUND(SUM(NumberOfFans) / (SELECT SUM(NumberOfFans) FROM fanspergenderage) * 100, 2), "%") 
"Age split in %", SUM(NumberOfFans) "Number of fans"
FROM fanspergenderage
GROUP BY AgeGroup;

-- Page Statistics - Analysis by gender (split of fans)
SELECT Gender, CONCAT(ROUND(SUM(NumberOfFans) / (SELECT SUM(NumberOfFans) FROM fanspergenderage) * 100, 
2), "%") "Gender split in %", SUM(NumberOfFans) "Number of fans"
FROM fanspergenderage
GROUP BY Gender;

-- Page Statistics - Analysis by language
SELECT language, SUM(NumberOfFans) "Number of English speaking fans"
FROM fansperlanguage
WHERE CalendarDate = (SELECT MAX(CalendarDate) FROM fansperlanguage)
AND language = 'en'
GROUP BY language;

SELECT language, CONCAT(ROUND(SUM(NumberOfFans) / (SELECT SUM(NumberOfFans) FROM fansperlanguage) * 100, 
2), "%") "% English speaking fans"
FROM fansperlanguage
WHERE language = 'en'
GROUP BY language;

SELECT CountryName, language, SUM(NumberOfFans) "Number of fans",
ROUND(SUM(NumberOfFans) * AverageIncome * 0.0001, 2) "Potential market"
FROM fansperlanguage f
JOIN popstats p
ON f.countrycode = p.countrycode
WHERE CalendarDate = (SELECT MAX(CalendarDate) FROM fansperlanguage)
AND language = 'en'
AND CountryName = 'United states';

-- Post Statistics  - Engagement per day of the week
SELECT DAYOFWEEK(CreatedTime) "Day of the week", CONCAT(ROUND(SUM(EngagedFans) / (SELECT SUM(EngagedFans) FROM postinsights) 
* 100, 2), "%") "Engagement ratio", SUM(EngagedFans) "Number of fans"
FROM postinsights
GROUP BY DAYOFWEEK(CreatedTime)
ORDER BY 1;

-- Post statistics  - Engagement per time of day
SELECT timerange, CONCAT(ROUND(SUM(EngagedFans) / (SELECT SUM(EngagedFans) FROM postinsights) 
* 100, 2), "%") "Engagement ratio", SUM(EngagedFans) "Number of engaged fans"
FROM 
(SELECT 
CASE
	WHEN TIME(createdtime) BETWEEN '05:00:00' AND '08:59:00' THEN '05:00 - 08:59'
    WHEN TIME(createdtime) BETWEEN '09:00:00' AND '11:59:00' THEN '09:00 - 11:59'
    WHEN TIME(createdtime) BETWEEN '12:00:00' AND '14:59:00' THEN '12:00 - 14:59'
    WHEN TIME(createdtime) BETWEEN '15:00:00' AND '18:59:00' THEN '15:00 - 18:59'
    WHEN TIME(createdtime) BETWEEN '19:00:00' AND '21:59:00' THEN '19:00 - 21:59'
    WHEN TIME(createdtime) >= '22:00:00' THEN '22:00 or later'
END timerange, EngagedFans
FROM postinsights) AS rangetable
GROUP BY timerange
ORDER BY timerange;